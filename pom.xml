<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>gov.nist.drmf.interpreter</groupId>
    <artifactId>interpreter</artifactId>
    <packaging>pom</packaging>
    <name>LaCASt - A LaTeX to CAS Translator</name>
    <version>2.1-SNAPSHOT</version>

    <developers>
        <developer>
            <name>Andre Greiner-Petter</name>
            <email>andre.greiner-petter@t-online.de</email>
            <organization>University of Wuppertal</organization>
            <organizationUrl>https://dke.uni-wuppertal.de/de.html</organizationUrl>
        </developer>
        <developer>
            <name>Moritz Schubotz</name>
            <email>moritz.schubotz@fiz-karlsruhe.de</email>
            <organization>FIZ Karlsruhe</organization>
            <organizationUrl>https://www.fiz-karlsruhe.de/</organizationUrl>
        </developer>
    </developers>

    <modules>
        <module>interpreter.common</module>
        <module>interpreter.pom</module>
        <module>interpreter.lacast</module>
        <module>interpreter.maple</module>
        <module>interpreter.mathematica</module>
        <module>interpreter.generic</module>
        <module>interpreter.core</module>
        <module>interpreter.evaluation</module>
        <module>interpreter.report</module> <!-- test report of all previous packages -->
    </modules>

    <profiles>
        <profile>
            <id>build</id>
            <modules>
                <module>mathosphere</module>
            </modules>
        </profile>
        <profile>
            <id>ci</id>
            <activation>
                <file>
                    <missing>${main.basedir}/lacast.config.yaml</missing>
                </file>
            </activation>
            <properties>
                <config.file.path>${main.basedir}/config/template-lacast.config.yaml</config.file.path>
            </properties>
        </profile>
    </profiles>

    <properties>
        <!-- settings to proper work with pom-tagger, maple, and mathematica -->
        <mlp.path>${main.basedir}/libs/MLP/MLP.jar</mlp.path>
        <mlp.version>1.1</mlp.version>
        <maple.path>${main.basedir}/libs/Maple</maple.path>
        <maple.version>2020.1</maple.version>

        <!-- Setup default config path -->
        <config.file.path>${main.basedir}/lacast.config.yaml</config.file.path>

        <!-- Setup Java and maven versions -->
        <java.version>11</java.version>
        <main.basedir>${project.basedir}</main.basedir>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven.compiler.version>3.8.0</maven.compiler.version>
        <maven.surefire.version>3.0.0-M4</maven.surefire.version>
        <maven.assembly.version>3.2.0</maven.assembly.version>
        <maven.install.version>3.0.0-M1</maven.install.version>

        <!-- Setup tests and coverage -->
        <junit.version>5.6.0</junit.version>
        <mockito.version>4.1.0</mockito.version>
        <jacoco.version>0.8.5</jacoco.version>
        <jacoco.report.dir>${main.basedir}/target</jacoco.report.dir>

        <!-- Setup Logging -->
        <log4j2.version>2.17.2</log4j2.version>

        <!-- Addition versions -->
        <jackson.version>2.11.0</jackson.version>
        <elasticsearch.version>7.6.1</elasticsearch.version>
        <wikidatatoolkit.version>0.12.1</wikidatatoolkit.version>
    </properties>

    <repositories>
        <!-- Enable snapshot repository, essentially for wikipedia bot framework jwbf -->
        <repository>
            <id>snapshots-repo</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency> <!-- Logging via log4j2 -->
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j2.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j2.version}</version>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <!--  Gson: Java to Json conversion -->
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>2.8.6</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-yaml</artifactId>
                <version>${jackson.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/commons-cli/commons-cli -->
            <dependency>
                <groupId>commons-cli</groupId>
                <artifactId>commons-cli</artifactId>
                <version>1.4</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>2.7</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>3.12.0</version>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-text</artifactId>
                <version>1.10.0</version>
            </dependency>

            <dependency>
                <groupId>com.thoughtworks.xstream</groupId>
                <artifactId>xstream</artifactId>
                <version>1.4.19</version>
            </dependency>

            <dependency>
                <groupId>org.elasticsearch.client</groupId>
                <artifactId>elasticsearch-rest-high-level-client</artifactId>
                <version>${elasticsearch.version}</version>
            </dependency>

            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${junit.version}</version>
                <!--
                We extend the API sometimes, so we just need this
                not only in test-scope
                 -->
            </dependency>

            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-params</artifactId>
                <version>${junit.version}</version>
                <!--
                We extend the API sometimes, so we just need this
                not only in test-scope
                 -->
            </dependency>

            <dependency> <!-- Better tests -->
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest</artifactId>
                <version>2.2</version>
                <!-- We writing custom conditions, thus we need it at
                 runtime not only in test scope. -->
            </dependency>

            <dependency> <!-- For mocking objects -->
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>mlp</artifactId>
                <version>${mlp.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>maple</artifactId>
                <version>${maple.version}</version>
            </dependency>

            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>maple-call</artifactId>
                <version>${maple.version}</version>
            </dependency>

            <dependency> <!-- Used to annotate regex as a regex string (enable highlighting) -->
                <groupId>org.jetbrains</groupId>
                <artifactId>annotations</artifactId>
                <version>19.0.0</version>
            </dependency>

            <dependency> <!-- Easy to scan for classes with specific annotations, interfaces, superclasses etc. -->
                <groupId>org.reflections</groupId>
                <artifactId>reflections</artifactId>
                <version>0.10.2</version>
            </dependency>
            <dependency> <!-- Stop reflections package from weeping that LOG4J2 is so much more cool... -->
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-simple</artifactId>
                <version>1.7.32</version>
            </dependency>

            <dependency> <!-- Wikidata Toolkit -->
                <groupId>org.wikidata.wdtk</groupId>
                <artifactId>wdtk-dumpfiles</artifactId>
                <version>${wikidatatoolkit.version}</version>
            </dependency>
            <dependency>
                <groupId>org.wikidata.wdtk</groupId>
                <artifactId>wdtk-wikibaseapi</artifactId>
                <version>${wikidatatoolkit.version}</version>
            </dependency>

            <dependency> <!-- Wikipedia (Wiki Bot Framework) -->
                <groupId>net.sourceforge</groupId>
                <artifactId>jwbf</artifactId>
                <version>4.0.0-SNAPSHOT</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <!-- Define unified plugin usage in modules -->
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven.surefire.version}</version>
                    <configuration>
                        <workingDirectory>${main.basedir}/</workingDirectory>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${maven.assembly.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>${maven.install.version}</version>
                    <executions>
                        <execution>
                            <id>mlp-install</id>
                            <phase>initialize</phase>
                            <goals>
                                <goal>install-file</goal>
                            </goals>
                            <configuration>
                                <groupId>${project.groupId}</groupId>
                                <artifactId>mlp</artifactId>
                                <version>${mlp.version}</version>
                                <packaging>jar</packaging>
                                <file>${mlp.path}</file>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>

        <!-- Setup plugins that are automatically run by every module -->
        <plugins>
            <!-- With Java 11, we force every module to use the newest version of the compiler -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.version}</version>
                <configuration>
                    <release>${java.version}</release>
                </configuration>
            </plugin>
            <!-- The install plugin should be triggered for all modules, otherwise some dependencies are missing -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
            </plugin>
            <!-- Test coverage should be run also on all modules -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <configuration>
                    <excludes>
                        <exclude>**/*PomParser*</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>it.ozimov</groupId>
                <artifactId>yaml-properties-maven-plugin</artifactId>
                <version>1.1.3</version>
                <executions>
                    <execution>
                        <phase>initialize</phase>
                        <goals>
                            <goal>read-project-properties</goal>
                        </goals>
                        <configuration>
                            <files>
                                <file>${config.file.path}</file>
                            </files>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
